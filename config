# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:AgaveNerdFont 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --aus
exec autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.

# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --image ~/Pictures/bg2.png --noforkexec google-chrome-stable --app='https://web.whatsapp.com/'

# i3lock
bindsym $mod+x exec --no-startup-id i3lock --image ~/Pictures/bg2.png


# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Screen Brightness
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl --min-val=2 -q set 3%-
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl -q set 3%+

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec terminator

# kill focused window
bindsym $mod+Shift+q kill

# start rofi program launcher
bindsym $mod+d exec --no-startup-id rofi -show drun -show-icons

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
#  bindsym $mod+j focus left
#  bindsym $mod+k focus down
#  bindsym $mod+l focus up
#  bindsym $mod+eacute focus right

# Logout
#bindsym $mod+Shift+x i3-msg exit

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+eacute move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h
# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle resize set 1280px 720px

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:  "
set $ws2 "2: 󰊯 "
set $ws3 "3:  "
set $ws4 "4: 󰿏 "
set $ws5 "5:  "
set $ws6 "6: 󰃇 "
set $ws7 "7:  "
set $ws8 "8:  "
set $ws9 "9: 󰏆 "
set $ws10 "10:  "
# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# workspaces to specific output (HDMI-1-0)
workspace $ws1 output eDP-1
workspace $ws2 output eDP-1
workspace $ws3 output eDP-1
workspace $ws4 output eDP-1
workspace $ws5 output eDP-1
workspace $ws6 output eDP-1
workspace $ws7 output eDP-1
workspace $ws8 output eDP-1
workspace $ws9 output eDP-1
workspace $ws10 output eDP-1

# Define names for workspaces on the second monitor
set $ws11 "11:  "
set $ws12 "12: 󰊯 "
set $ws13 "13:  "
set $ws14 "14: 󰿏 "
set $ws15 "15:  "
set $ws16 "16: 󰃇 "
set $ws17 "17:  "
set $ws18 "18:  "
set $ws19 "19: 󰏆 "
set $ws110 "20:  "
# switch to workspace on second monitor
bindsym $mod+F1 workspace number $ws11
bindsym $mod+F2 workspace number $ws12
bindsym $mod+F3 workspace number $ws13
bindsym $mod+F4 workspace number $ws14
bindsym $mod+F5 workspace number $ws15
bindsym $mod+F6 workspace number $ws16
bindsym $mod+F7 workspace number $ws17
bindsym $mod+F8 workspace number $ws18
bindsym $mod+F9 workspace number $ws19
bindsym $mod+F10 workspace number $ws110
# move focused container to workspace on second monitor
bindsym $mod+Shift+F1 move container to workspace number $ws11
bindsym $mod+Shift+F2 move container to workspace number $ws12
bindsym $mod+Shift+F3 move container to workspace number $ws13
bindsym $mod+Shift+F4 move container to workspace number $ws14
bindsym $mod+Shift+F5 move container to workspace number $ws15
bindsym $mod+Shift+F6 move container to workspace number $ws16
bindsym $mod+Shift+F7 move container to workspace number $ws17
bindsym $mod+Shift+F8 move container to workspace number $ws18
bindsym $mod+Shift+F9 move container to workspace number $ws19
bindsym $mod+Shift+F10 move container to workspace number $ws110
# workspaces to specific output (HDMI-1-0)
workspace $ws11 output HDMI-1-0
workspace $ws12 output HDMI-1-0
workspace $ws13 output HDMI-1-0
workspace $ws14 output HDMI-1-0
workspace $ws15 output HDMI-1-0
workspace $ws16 output HDMI-1-0
workspace $ws17 output HDMI-1-0
workspace $ws18 output HDMI-1-0
workspace $ws19 output HDMI-1-0
workspace $ws110 output HDMI-1-0

# switch workspaces: Super Tab
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# scratchpad

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
# Original
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Out!? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

#bindsym $mod+Shift+e exec --no-startup-id i3-nagbar -t warning -m 'Do you really want to exit i3? (y to confirm)' -B 'Yes' 'i3-msg exit'

bindsym $mod+Shift+e exec i3-nagbar -f "pango:AgaveNerdFont 11" \
-m "󰚌 i3 ?" \
-B "Exit now" "i3-msg exit" \
-B "Suspend" "systemctl suspend && pkill i3-nagbar" \
-B "Reboot" "systemctl reboot" \
-B "Power off" "systemctl poweroff" \

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym eacute resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# bumblebee-status
# /usr/share/bumblebee-status/bumblebee-status

bar {
    id primary_bar 
    workspace_buttons yes
    font pango:AgaveNerdFont 12
    mode invisible #hide
    position top
    tray_output none
    status_command ~/.config/bumblebee-status/bumblebee-status \
        -m playerctl time date weather battery-upower xrandr brightness pasink dunstctl \
        -p root.path=/ time.format="%H:%M" date.format="%a, %d %b %Y" \
        -t tommy_dark

    colors {
        separator #000000
        background #000000
        statusline #000000
        focused_workspace #000000 #000000 #ffffff 
        inactive_workspace #000000 #000000 #808080
        urgent_workspace #000000 #000000 #ff2d00 
    }
}

bar {
    id second_bar
    workspace_buttons no 
    font pango:AgaveNerdFont 12
    mode invisible #hide
    position bottom

    status_command ~/.config/bumblebee-status/bumblebee-status \
        -m nic network_traffic bluetooth2 \
        -p root.path=/ time.format="%H:%M" date.format="%a, %d %b %Y" \
        -t tommy_dark

    colors {
        separator #000000
        background #000000
        statusline #000000
        focused_workspace #000000 #000000 #ffffff 
        inactive_workspace #000000 #000000 #808080
        urgent_workspace #000000 #000000 #ff2d00 
    }
}

# Keybinding to hide the second bar
 bindsym $mod+Shift+b exec "i3-msg 'bar mode toggle'"
 #bindsym $mod+Shift+h exec "i3-msg 'bar mode id primary_bar toggle'"

# gaps
gaps inner 5
gaps outer 3

# disable window titlebars
for_window [class="^.*"] border pixel 1
client.focused  #808080 #808080 #808080 #808080

bindsym $mod+Shift+g gaps inner all set 5; gaps outer all set 3
bindsym $mod+Shift+n gaps inner all set 0; gaps outer all set 0

# Only enable gaps on a workspace when there is at least one container
# smart_gaps on

# Activate smart borders (always)
 smart_borders on

# Activate smart borders (only when there are effectively no gaps)
# smart_borders no_gaps

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

# What follows here is optional and defines a mode that allows you to resize the gaps on the fly.
# Press $mod1+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. 
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod1+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# screenshot
bindsym Print exec gnome-screenshot --interactive --file '~/Pictures/Screenshots'
bindsym Shift+Print exec gnome-screenshot --file '~/Pictures/Screenshots' 

# shortcuts
bindsym $mod+Control+p exec --no-startup-id ~/.config/scripts/toggle_picom.sh
bindsym $mod+c exec --no-startup-id exec google-chrome-stable --app='https://chatgpt.com/?oai-dm=1' floating enable

bindsym $mod+Control+c exec google-chrome-stable
bindsym $mod+Control+f workspace $ws3; exec nemo
bindsym $mod+Control+d workspace $ws4; exec terminator -x bash -c '~/.config/scripts/devmux.sh'
bindsym $mod+Control+b workspace $ws6; exec virtualbox
bindsym $mod+Control+n workspace $ws7; exec nomacs
bindsym $mod+Control+m workspace $ws5; exec google-chrome-stable --app='https://www.openxchange.eu/appsuite/'
bindsym $mod+Control+w workspace $ws10; exec google-chrome-stable --app='https://web.whatsapp.com/'
bindsym $mod+Control+t workspace $ws10; exec telegram-desktop
bindsym $mod+t exec ~/.config/scripts/time.sh
bindsym $mod+b exec ~/.config/scripts/battery_show.sh

bindsym $mod+Control+v workspace $ws9; exec 'code'

# windows starting in floating mode and centered
# check window class/title: xprop | grep WM_CLASS

for_window [floating] move position center

# for_window [title="chatgpt.com"] floating enable
for_window [class="1Password"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
# for_window [class="Spotify"] floating enable
for_window [class="Lxappearance"] floating enable 
for_window [class="gnome-system-monitor"] floating enable 
for_window [class="Nitrogen"] floating enable
for_window [class="Gnome-multi-writer"] floating enable
for_window [class="etcher"] floating enable 
for_window [class="calculator"] floating enable 
for_window [class="Org.gnome.Weather.Application"] floating enable
# for_window [title="virtualbox"] floating enable 
# for_window [title="win11pro"] floating enable resize set 1920 1080 
for_window [class="Gimp"] floating enable

for_window [class="Arandr"] floating enable
for_window [class="Xarchiver"] floating enable
for_window [class="Rhythmbox"] floating enable 

for_window [class="libreoffice*"] floating disable
for_window [class="libreoffice*"] move to workspace $ws9
for_window [class="libreoffice*"] fullscreen disable

for_window [class="Nm-connection-editor"] floating enable 
for_window [class="Blueman-manager"] floating enable 
for_window [title="Disks"] floating enable
for_window [class="Nvidia-settings"] floating enable
for_window [class="ePower Statistics"] floating enable
for_window [class="VirtualBox Manager"] floating enable
for_window [class="multibootusb"] floating enable
for_window [title="Remmina"] floating enable
for_window [class="org.gnome.Weather"] floating enable
for_window [class="gnome-calendar"] floating enable 
for_window [title="Screenshot"] floating enable
for_window [class="gnome-calculator"] floating enable

# run ssh agent
exec --no-startup-id eval $(ssh-agent -s)

# picom
# always exec --no-startup-id picom -i 0.7 --focus-exclude 'class_g = "Rofi" || class_g = "mpv" || class_g = "gl"'
# exec --no-startup-id picom -i 0.7

# set background
exec --no-startup-id nitrogen --set-scaled ~/Pictures/bg2.jpg

# settings + autostart
exec --no-startup-id bash ~/.config/i3/i3_p1.sh
# exec --no-startup-id bash ~/.config/i3/autostart.sh

exec --no-startup-id pcloud

exec --no-startup-id bash ~/.config/scripts/alias.sh
exec --no-startup-id gtk-application-prefer-dark-theme = true

# Enable touchpad and set properties
exec_always --no-startup-id bash ~/.config/scripts/touchpad.sh
exec_always --no-startup-id bash /usr/bin/xset dpms 300 600 900

